#!/usr/bin/env pwsh

Write-Host "=== TESTE P√ÅGINAS FRONTEND BACKOFFICE ===" -ForegroundColor Cyan

# Fun√ß√£o para testar uma p√°gina
function Test-FrontendPage {
    param(
        [string]$Url,
        [string]$PageName
    )
    
    try {
        Write-Host "--- Testando $PageName ---" -ForegroundColor Yellow
        
        # Fazer requisi√ß√£o HTTP para a p√°gina
        $response = Invoke-WebRequest -Uri $Url -Method GET -TimeoutSec 10
        
        if ($response.StatusCode -eq 200) {
            # Verificar se cont√©m erro de aplica√ß√£o
            if ($response.Content -match "Application error.*client-side exception") {
                Write-Host "‚ùå $PageName`: Erro de aplica√ß√£o client-side detectado" -ForegroundColor Red
                return $false
            } elseif ($response.Content -match "<!DOCTYPE html>") {
                Write-Host "‚úÖ $PageName`: P√°gina carregou com sucesso" -ForegroundColor Green
                return $true
            } else {
                Write-Host "‚ö†Ô∏è $PageName`: Resposta inesperada" -ForegroundColor Yellow
                return $false
            }
        } else {
            Write-Host "‚ùå $PageName`: Status $($response.StatusCode)" -ForegroundColor Red
            return $false
        }
    }
    catch {
        Write-Host "‚ùå $PageName`: Erro - $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# Testar p√°ginas espec√≠ficas
$pages = @(
    @{ Url = "http://localhost:3000/"; Name = "Home" },
    @{ Url = "http://localhost:3000/transacoes"; Name = "Transa√ß√µes" },
    @{ Url = "http://localhost:3000/priorizacao"; Name = "Prioriza√ß√£o" },
    @{ Url = "http://localhost:3000/usuarios"; Name = "Usu√°rios" },
    @{ Url = "http://localhost:3000/contas"; Name = "Contas" },
    @{ Url = "http://localhost:3000/empresas"; Name = "Empresas" }
)

$successCount = 0
$totalCount = $pages.Count

foreach ($page in $pages) {
    if (Test-FrontendPage -Url $page.Url -PageName $page.Name) {
        $successCount++
    }
    Start-Sleep -Seconds 1
}

Write-Host ""
Write-Host "=== RESULTADO FINAL ===" -ForegroundColor Cyan
Write-Host "P√°ginas testadas: $totalCount" -ForegroundColor White
Write-Host "P√°ginas funcionando: $successCount" -ForegroundColor Green
Write-Host "P√°ginas com problema: $($totalCount - $successCount)" -ForegroundColor Red

if ($successCount -eq $totalCount) {
    Write-Host "üéâ Todas as p√°ginas est√£o funcionando!" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Algumas p√°ginas t√™m problemas" -ForegroundColor Yellow
}
