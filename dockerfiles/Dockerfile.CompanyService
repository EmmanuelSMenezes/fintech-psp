# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy project files
COPY ["src/Services/FintechPSP.CompanyService/FintechPSP.CompanyService.csproj", "src/Services/FintechPSP.CompanyService/"]
COPY ["src/Shared/FintechPSP.Shared.Domain/FintechPSP.Shared.Domain.csproj", "src/Shared/FintechPSP.Shared.Domain/"]
COPY ["src/Shared/FintechPSP.Shared.Infrastructure/FintechPSP.Shared.Infrastructure.csproj", "src/Shared/FintechPSP.Shared.Infrastructure/"]

# Restore dependencies
RUN dotnet restore "src/Services/FintechPSP.CompanyService/FintechPSP.CompanyService.csproj"

# Copy source code
COPY . .
WORKDIR "/src/src/Services/FintechPSP.CompanyService"

# Build
RUN dotnet build "FintechPSP.CompanyService.csproj" -c Release -o /app/build

# Publish
FROM build AS publish
RUN dotnet publish "FintechPSP.CompanyService.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published app
COPY --from=publish /app/publish .

# Set environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:8080
ENV ConnectionStrings__DefaultConnection="Host=postgres;Port=5432;Database=fintech_psp;Username=postgres;Password=postgres"
ENV RabbitMQ__Host=rabbitmq
ENV RabbitMQ__Port=5672
ENV RabbitMQ__Username=guest
ENV RabbitMQ__Password=guest

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start application
ENTRYPOINT ["dotnet", "FintechPSP.CompanyService.dll"]
