services:
  # Infraestrutura
  postgres:
    image: postgres:15-alpine
    container_name: fintech-postgres-new
    environment:
      POSTGRES_DB: fintech_psp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - fintech_postgres_data:/var/lib/postgresql/data
      - ./database/init-multi-account-tables.sql:/docker-entrypoint-initdb.d/03-multi-account-tables.sql
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: fintech-rabbitmq-new
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - fintech_rabbitmq_data:/var/lib/rabbitmq
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fintech-redis-new
    ports:
      - "6380:6379"
    volumes:
      - fintech_redis_data:/data
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservices
  auth-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.AuthService/Dockerfile
    container_name: fintech-auth-service
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
      - Jwt__Key=your-super-secret-key-that-should-be-at-least-256-bits-long-for-production
      - Jwt__Issuer=FintechPSP
      - Jwt__Audience=FintechPSP
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  transaction-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.TransactionService/Dockerfile
    container_name: fintech-transaction-service
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  balance-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.BalanceService/Dockerfile
    container_name: fintech-balance-service
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  webhook-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.WebhookService/Dockerfile
    container_name: fintech-webhook-service
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  integration-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.IntegrationService/Dockerfile
    container_name: fintech-integration-service
    ports:
      - "5005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  user-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.UserService/Dockerfile
    container_name: fintech-user-service
    ports:
      - "5006:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
      - Jwt__Key=your-super-secret-key-that-should-be-at-least-256-bits-long-for-production
      - Jwt__Issuer=FintechPSP
      - Jwt__Audience=FintechPSP
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  config-service:
    build:
      context: .
      dockerfile: src/Services/FintechPSP.ConfigService/Dockerfile
    container_name: fintech-config-service
    ports:
      - "5007:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres:5432;Database=fintech_psp;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: src/Gateway/FintechPSP.APIGateway/Dockerfile
    container_name: fintech-api-gateway
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      - Jwt__Key=your-super-secret-key-that-should-be-at-least-256-bits-long-for-production
      - Jwt__Issuer=FintechPSP
      - Jwt__Audience=FintechPSP
    depends_on:
      - auth-service
      - transaction-service
      - balance-service
      - webhook-service
      - integration-service
      - user-service
      - config-service
    networks:
      - fintech-network
    restart: unless-stopped

  # BackofficeWeb Frontend
  backoffice-web:
    build:
      context: ./frontends/BackofficeWeb
      dockerfile: Dockerfile
    container_name: fintech-backoffice-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:5000
    depends_on:
      - api-gateway
    networks:
      - fintech-network
    restart: unless-stopped

  # InternetBankingWeb Frontend
  internet-banking-web:
    build:
      context: ./frontends/InternetBankingWeb
      dockerfile: Dockerfile
    container_name: fintech-internet-banking-web
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:5000
    depends_on:
      - api-gateway
    networks:
      - fintech-network
    restart: unless-stopped

volumes:
  fintech_postgres_data:
  fintech_rabbitmq_data:
  fintech_redis_data:

networks:
  fintech-network:
    driver: bridge
