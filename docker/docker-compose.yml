services:
  # Infraestrutura
  postgres:
    image: postgres:15-alpine
    container_name: fintech-postgres
    environment:
      POSTGRES_DB: fintech_psp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Mudando porta para evitar conflito
    volumes:
      - fintech_postgres_data:/var/lib/postgresql/data
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: fintech-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"  # Mudando porta para evitar conflito
      - "15673:15672"  # Mudando porta para evitar conflito
    volumes:
      - fintech_rabbitmq_data:/var/lib/rabbitmq
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fintech-redis
    ports:
      - "6380:6379"  # Mudando porta para evitar conflito
    volumes:
      - fintech_redis_data:/data
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway (Ocelot)
  api-gateway:
    build:
      context: ../src/Gateway/FintechPSP.APIGateway
      dockerfile: Dockerfile
    container_name: fintech-api-gateway
    ports:
      - "5000:8080"
    depends_on:
      - auth-service
      - transaction-service
      - balance-service
      - webhook-service
      - integration-service
      - user-service
      - config-service
    networks:
      - fintech-network

  # AuthService
  auth-service:
    build:
      context: ../src/Services/FintechPSP.AuthService
      dockerfile: Dockerfile
    container_name: fintech-auth-service
    ports:
      - "5001:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # TransactionService
  transaction-service:
    build:
      context: ../src/Services/FintechPSP.TransactionService
      dockerfile: Dockerfile
    container_name: fintech-transaction-service
    ports:
      - "5002:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # BalanceService
  balance-service:
    build:
      context: ../src/Services/FintechPSP.BalanceService
      dockerfile: Dockerfile
    container_name: fintech-balance-service
    ports:
      - "5003:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # WebhookService
  webhook-service:
    build:
      context: ../src/Services/FintechPSP.WebhookService
      dockerfile: Dockerfile
    container_name: fintech-webhook-service
    ports:
      - "5004:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # IntegrationService
  integration-service:
    build:
      context: ../src/Services/FintechPSP.IntegrationService
      dockerfile: Dockerfile
    container_name: fintech-integration-service
    ports:
      - "5005:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # UserService
  user-service:
    build:
      context: ../src/Services/FintechPSP.UserService
      dockerfile: Dockerfile
    container_name: fintech-user-service
    ports:
      - "5006:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

  # ConfigService
  config-service:
    build:
      context: ../src/Services/FintechPSP.ConfigService
      dockerfile: Dockerfile
    container_name: fintech-config-service
    ports:
      - "5007:8080"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - fintech-network

volumes:
  fintech_postgres_data:
  fintech_rabbitmq_data:
  fintech_redis_data:

networks:
  fintech-network:
    driver: bridge
